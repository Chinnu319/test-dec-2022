AWSTemplateFormatVersion: '2010-09-09'
Resources:
  InputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-input-bucket

  OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-output-bucket

  VideoProcessingFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: VideoProcessingFunction
      Runtime: nodejs14.x
      Handler: index.handler
      Code:
        ZipFile: |
          const AWS = require('aws-sdk');
          const s3 = new AWS.S3();
          const batch = new AWS.Batch();

          exports.handler = async (event) => {
            const bucketName = event.Records[0].s3.bucket.name;
            const key = event.Records[0].s3.object.key;

           
            const jobDefinition = 'my-job-definition-arn';
            const jobQueue = 'my-job-queue-arn';

            const params = {
              jobDefinition: jobDefinition,
              jobName: key,
              jobQueue: jobQueue,
              parameters: {
                inputBucket: bucketName,
                inputFile: key,
                outputBucket: 'my-output-bucket'
              }
            };

            await batch.submitJob(params).promise();
          };

  VideoProcessingPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt VideoProcessingFunction.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub arn:aws:s3:::${InputBucket}

  VideoProcessingEvent:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref InputBucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Function: !GetAtt VideoProcessingFunction.Arn
